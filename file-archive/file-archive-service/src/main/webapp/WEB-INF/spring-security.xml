<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd">

    <http pattern="/document/**" use-expressions="true">
        <intercept-url method="POST"    pattern="/document"                  access="hasRole('ROLE_ADMIN')" />
        <intercept-url method="POST"    pattern="/document/*/content"        access="hasRole('ROLE_ADMIN')" />
        <intercept-url method="DELETE"  pattern="/document/*"                access="hasRole('ROLE_ADMIN')" />

        <http-basic />
    </http>

    <jee:jndi-lookup id="userDS"
                     jndi-name="java:/comp/env/jdbc/UserDS"
                     expected-type="javax.sql.DataSource"/>

    <authentication-manager>
        <authentication-provider>
            <jdbc-user-service data-source-ref="userDS"
                               users-by-username-query="select username, password, enabled from users where username = ?"
                               authorities-by-username-query="select username, role from user_roles where username = ?"
                               />

        </authentication-provider>
    </authentication-manager>

</beans:beans>